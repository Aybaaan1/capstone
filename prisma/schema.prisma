// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
<<<<<<< HEAD
model User {
  id             Int      @id @default(autoincrement())
  email          String   @unique
  idnumber       String   @unique
  firstname      String
  lastname       String
  program        String
  password       String
  role           Role     @default(STUDENT) // Default role is set to 'STUDENT'
  image          String?  // Optional field for user profile image
}

enum Role {
  STUDENT
  ADMIN
=======


// ******************************** MODELS ******************************** //

enum UserRole {
  ADMIN
  STUDENT
}

model User {
  id          String    @id @default(uuid())
  name        String
  email       String    @unique
  phoneNumber String?
  userType    UserRole
  items       Item[]    @relation("ReportedItems")
  claims      Claim[]
}

model Item {
  id          String    @id @default(uuid())
  name        String
  description String?
  category    String
  status      String
  reportDate  DateTime  @default(now())
  reporterId  String
  reporter    User      @relation("ReportedItems", fields: [reporterId], references: [id])
  claims      Claim[]
}

model Claim {
  id        String   @id @default(uuid())
  userId    String
  itemId    String
  claimDate DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  item      Item     @relation(fields: [itemId], references: [id])

  @@unique([userId, itemId])
>>>>>>> 2733bed142748b005cdaffba8ecef1ab5c06d8db
}